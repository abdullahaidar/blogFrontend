{"ast":null,"code":"import _objectSpread from\"/home/dci/Desktop/BackendClass/BlogWebsite/Frontend/blog/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/home/dci/Desktop/BackendClass/BlogWebsite/Frontend/blog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useHistory}from'react-router-dom';import{Container,Form,Button}from'react-bootstrap';import'./AddPost.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var AddPost=function AddPost(_ref){var propsPost=_ref.post,addPost=_ref.addPost;var _useState=useState(_objectSpread({},propsPost)),_useState2=_slicedToArray(_useState,2),post=_useState2[0],setPost=_useState2[1];var history=useHistory();var handelForm=function handelForm(event){event.preventDefault();if(post.title){addPost(post);history.push('/');}else{alert('title required');}};return/*#__PURE__*/_jsx(Container,{className:\"container\",children:/*#__PURE__*/_jsxs(Form,{onSubmit:handelForm,children:[/*#__PURE__*/_jsx(Form.Label,{className:\"label\",children:\"Title\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",placeholder:\"Add a title\",id:\"title\",value:post.title,onChange:function onChange(event){return setPost(_objectSpread(_objectSpread({},post),{},{title:event.target.value}));}}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"exampleForm.ControlTextarea1\",children:[/*#__PURE__*/_jsx(Form.Label,{className:\"label\",children:\"Content\"}),/*#__PURE__*/_jsx(Form.Control,{as:\"textarea\",rows:10,id:\"textarea\",value:post.content,onChange:function onChange(event){return setPost(_objectSpread(_objectSpread({},post),{},{content:event.target.value}));}})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"mt-3\",children:\"Submit\"})]})});};export default AddPost;","map":{"version":3,"sources":["/home/dci/Desktop/BackendClass/BlogWebsite/Frontend/blog/src/components/AddPost.js"],"names":["React","useState","useHistory","Container","Form","Button","AddPost","propsPost","post","addPost","setPost","history","handelForm","event","preventDefault","title","push","alert","target","value","content"],"mappings":"qRAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,UAAT,KAA2B,kBAA3B,CACA,OAASC,SAAT,CAAoBC,IAApB,CAA0BC,MAA1B,KAAwC,iBAAxC,CACA,MAAO,eAAP,C,wFAKA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAkC,IAAzBC,CAAAA,SAAyB,MAA/BC,IAA+B,CAAdC,OAAc,MAAdA,OAAc,CAG9C,cAAwBR,QAAQ,kBAAMM,SAAN,EAAhC,wCAAOC,IAAP,eAAaE,OAAb,eACA,GAAIC,CAAAA,OAAO,CAAGT,UAAU,EAAxB,CAEA,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAC1BA,KAAK,CAACC,cAAN,GACA,GAAIN,IAAI,CAACO,KAAT,CAAgB,CACZN,OAAO,CAACD,IAAD,CAAP,CACAG,OAAO,CAACK,IAAR,CAAa,GAAb,EACH,CAHD,IAGO,CACHC,KAAK,CAAC,gBAAD,CAAL,CACH,CACJ,CARD,CAUA,mBACI,KAAC,SAAD,EAAW,SAAS,CAAC,WAArB,uBACI,MAAC,IAAD,EAAM,QAAQ,CAAEL,UAAhB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,mBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,IAAI,CAAC,MAAnB,CAA0B,WAAW,CAAC,aAAtC,CAAoD,EAAE,CAAC,OAAvD,CACI,KAAK,CAAEJ,IAAI,CAACO,KADhB,CAEI,QAAQ,CAAE,kBAACF,KAAD,QAAWH,CAAAA,OAAO,gCAAMF,IAAN,MAAYO,KAAK,CAAEF,KAAK,CAACK,MAAN,CAAaC,KAAhC,GAAlB,EAFd,EAFJ,cAKI,MAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,8BAAtB,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,SAAS,CAAC,OAAtB,qBADJ,cAEI,KAAC,IAAD,CAAM,OAAN,EAAc,EAAE,CAAC,UAAjB,CAA4B,IAAI,CAAE,EAAlC,CAAsC,EAAE,CAAC,UAAzC,CACI,KAAK,CAAEX,IAAI,CAACY,OADhB,CAEI,QAAQ,CAAE,kBAACP,KAAD,QAAWH,CAAAA,OAAO,gCAAMF,IAAN,MAAYY,OAAO,CAAEP,KAAK,CAACK,MAAN,CAAaC,KAAlC,GAAlB,EAFd,EAFJ,GALJ,cAWI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,SAAS,CAAC,MAAhC,oBAXJ,GADJ,EADJ,CAiBH,CAjCD,CAmCA,cAAeb,CAAAA,OAAf","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Container, Form, Button } from 'react-bootstrap'\nimport './AddPost.css'\n\n\n\n\nconst AddPost = ({ post: propsPost, addPost }) => {\n\n\n    const [post, setPost] = useState({ ...propsPost });\n    let history = useHistory()\n\n    const handelForm = (event) => {\n        event.preventDefault();\n        if (post.title) {\n            addPost(post);\n            history.push('/')\n        } else {\n            alert('title required');\n        }\n    }\n\n    return (\n        <Container className=\"container\">\n            <Form onSubmit={handelForm}>\n                <Form.Label className=\"label\">Title</Form.Label>\n                <Form.Control type=\"text\" placeholder=\"Add a title\" id=\"title\"\n                    value={post.title}\n                    onChange={(event) => setPost({ ...post, title: event.target.value })} />\n                <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                    <Form.Label className=\"label\">Content</Form.Label>\n                    <Form.Control as=\"textarea\" rows={10} id=\"textarea\"\n                        value={post.content}\n                        onChange={(event) => setPost({ ...post, content: event.target.value })} />\n                </Form.Group>\n                <Button type=\"submit\" className='mt-3'>Submit</Button>\n            </Form>\n        </Container>\n    )\n}\n\nexport default AddPost;"]},"metadata":{},"sourceType":"module"}